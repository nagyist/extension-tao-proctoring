{"version":3,"file":"taoProctoring/controller/routes.js","sources":["routes.js","ProctorDelivery/index.js","ProctorDelivery/testTakers.js","../tpl/entryPoint!tpl","TaoProctoring/index.js"],"names":["define","TaoProctoring","actions","index","ProctorDelivery","testTakers","$","__","helpers","loadingBar","encode","feedback","dialog","cssScope","start","proctorDeliveryIndexCtlr","$list","dataset","data","deliveryId","assignUrl","_url","id","removeUrl","serviceUrl","request","url","selection","message","length","ajax","tt","dataType","type","error","stop","done","response","success","datatable","html","encodeHtml","authorise","autoRender","autoDestroy","buttons","remove","on","status","empty","available","loading","tools","icon","title","label","action","location","href","massAction","onOkBtn","hidden","this","authorised","selectable","model","proctorDeliveryAssignCtlr","indexUrl","assign","event","history","back","hb","template","Handlebars","depth0","partials","program1","stack1","helper","buffer","call","hash","functionType","escapeExpression","content","inverse","self","noop","fn","program","program2","text","compilerInfo","merge","each","entries","entryPointTpl","refreshPolling","hiddenCls","taoProctoringCtlr","$titleLoading","$titleEmpty","$titleAvailable","$titleCount","listEntries","pollTo","update","clearTimeout","addClass","removeClass","append","setTimeout","refresh","_cb","Date","now"],"mappings":"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":["define('taoProctoring/controller/routes',[],function(){\n    return {\n        'TaoProctoring' : {\n            'actions' : {\n                'index' : 'controller/TaoProctoring/index'\n            }\n        },\n        'ProctorDelivery' : {\n            'actions' : {\n                'index' : 'controller/ProctorDelivery/index',\n                'testTakers' : 'controller/ProctorDelivery/testTakers'\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/ProctorDelivery/index',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/dialog',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback, dialog) {\n    'use strict';\n\n    /**\n     * The polling delay used to refresh the list\n     * @type {Number}\n     */\n    var refreshPolling = 60 * 1000; // once per minute\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.delivery-manager';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the ProctorDelivery index page\n     *\n     * @type {{start: Function}}\n     */\n    var proctorDeliveryIndexCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $list = $(cssScope + ' .list');\n            var dataset = $list.data('set');\n            var deliveryId = $list.data('id');\n            var assignUrl = helpers._url('testTakers', 'ProctorDelivery', 'taoProctoring', {id : deliveryId});\n            var removeUrl = helpers._url('remove', 'ProctorDelivery', 'taoProctoring', {id : deliveryId});\n            var authoriseUrl = helpers._url('authorise', 'ProctorDelivery', 'taoProctoring', {id : deliveryId});\n            var serviceUrl = helpers._url('deliveryTestTakers', 'ProctorDelivery', 'taoProctoring', {id : deliveryId});\n\n            // request the server with a selection of test takers\n            var request = function(url, selection, message) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: url,\n                        data: {\n                            tt: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            if (message) {\n                                feedback().success(message);\n                            }\n                            $list.datatable('refresh');\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            // request the server to authorise the selected test takers\n            var authorise = function(selection) {\n                dialog({\n                    message: __('Not yet implemented!'),\n                    autoRender: true,\n                    autoDestroy: true,\n                    buttons: 'ok'\n                });\n                //request(authoriseUrl, selection, __('Test takers have been authorised'));\n            };\n\n            // request the server to remove the selected test takers\n            var remove = function(selection) {\n                request(removeUrl, selection, __('Test takers have been removed'));\n            };\n\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function() {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    data: dataset,\n                    status: {\n                        empty: __('No assigned test takers'),\n                        available: __('Assigned test takers'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign test takers to this delivery'),\n                        label: __('Add test takers'),\n                        action: function() {\n                            location.href = assignUrl;\n                        }\n                    }, {\n                        id: 'authorise',\n                        icon: 'checkbox-checked',\n                        title: __('Authorise the selected test takers to run the delivery'),\n                        label: __('Authorise'),\n                        massAction: true,\n                        action: function(selection) {\n                            dialog({\n                                message: __('The test takers will be authorized to start this delivery. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    authorise(selection);\n                                }\n                            });\n                        }\n                    }, {\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the selected test takers from the delivery'),\n                        label: __('Remove'),\n                        massAction: true,\n                        action: function(selection) {\n                            dialog({\n                                message: __('The test takers will be removed from this delivery. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    remove(selection);\n                                }\n                            });\n                        }\n                    }],\n                    actions: [{\n                        id: 'authorise',\n                        icon: 'checkbox-checked',\n                        title: __('Authorise the test taker to run the delivery'),\n                        hidden: function() {\n                            return !!this.authorised;\n                        },\n                        action: function(id) {\n                            dialog({\n                                message: __('The test taker will be authorized to start this delivery. Continue ?'),\n                                autoRender: true,\n                                autoDestroy: true,\n                                onOkBtn: function() {\n                                    authorise([id]);\n                                }\n                            });\n                        }\n                    }, {\n                        id: 'remove',\n                        icon: 'remove',\n                        title: __('Remove the test taker from the delivery'),\n                        action: function(id) {\n                            dialog({\n                                autoRender: true,\n                                autoDestroy: true,\n                                message: __('The test taker will be removed from this delivery. Continue ?'),\n                                onOkBtn: function() {\n                                    remove([id]);\n                                }\n                            });\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'firstname',\n                        label: __('First name')\n                    }, {\n                        id: 'lastname',\n                        label: __('Last name')\n                    }, {\n                        id: 'company',\n                        label: __('Company name')\n                    }, {\n                        id: 'status',\n                        label: __('Status')\n                    }]\n                });\n        }\n    };\n\n    return proctorDeliveryIndexCtlr;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/ProctorDelivery/testTakers',[\n    'jquery',\n    'i18n',\n    'helpers',\n    'layout/loading-bar',\n    'util/encode',\n    'ui/feedback',\n    'ui/datatable'\n], function ($, __, helpers, loadingBar, encode, feedback) {\n    'use strict';\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.assign-test-takers';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the ProctorDelivery test takers assign page\n     *\n     * @type {{start: Function}}\n     */\n    var proctorDeliveryAssignCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $list = $(cssScope + ' .list');\n            var dataset = $list.data('set');\n            var deliveryId = $list.data('id');\n            var serviceUrl = helpers._url('availableTestTakers', 'ProctorDelivery', 'taoProctoring', {id : deliveryId});\n            var assignUrl = helpers._url('assign', 'ProctorDelivery', 'taoProctoring', {id : deliveryId});\n            var indexUrl = helpers._url('index', 'ProctorDelivery', 'taoProctoring', {id : deliveryId});\n\n            // send the selection to the server and redirect to the index page\n            var assign = function(selection) {\n                if (selection && selection.length) {\n                    loadingBar.start();\n\n                    $.ajax({\n                        url: assignUrl,\n                        data: {\n                            tt: selection\n                        },\n                        dataType : 'json',\n                        type: 'POST',\n                        error: function() {\n                            loadingBar.stop();\n                        }\n                    }).done(function(response) {\n                        loadingBar.stop();\n\n                        if (response && response.success) {\n                            feedback().success(__('Test takers have been added'));\n                            location.href = indexUrl;\n                        } else {\n                            feedback().error(__('Something went wrong ...') + '<br>' + encode.html(response.error), {encodeHtml: false});\n                        }\n                    });\n                }\n            };\n\n            $list\n                .on('query.datatable', function() {\n                    loadingBar.start();\n                })\n                .on('load.datatable', function(event, response) {\n                    loadingBar.stop();\n                })\n                .datatable({\n                    url: serviceUrl,\n                    data: dataset,\n                    status: {\n                        empty: __('No available test takers to assign'),\n                        available: __('Available test takers'),\n                        loading: __('Loading')\n                    },\n                    tools: [{\n                        id: 'back',\n                        icon: 'left',\n                        title: __('Return to the delivery'),\n                        label: __('Back'),\n                        action: function() {\n                            history.back();\n                        }\n                    }, {\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign the selected test takers to the delivery'),\n                        label: __('Assign the selected test takers'),\n                        massAction: true,\n                        action: function(selection) {\n                            assign(selection);\n                        }\n                    }],\n                    actions: [{\n                        id: 'assign',\n                        icon: 'add',\n                        title: __('Assign the test taker to the delivery'),\n                        action: function(id) {\n                            assign([id]);\n                        }\n                    }],\n                    selectable: true,\n                    model: [{\n                        id: 'firstname',\n                        label: __('First name')\n                    }, {\n                        id: 'lastname',\n                        label: __('Last name')\n                    }, {\n                        id: 'company',\n                        label: __('Company name')\n                    }]\n                });\n        }\n    };\n\n    return proctorDeliveryAssignCtlr;\n});\n\n","\ndefine('tpl!taoProctoring/tpl/entryPoint', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <li>\\n        <a class=\\\"block entry-point\\\" href=\\\"\";\n  if (helper = helpers.url) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.url); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n            <h3>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.content), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            <div class=\\\"clearfix\\\">\\n                <span class=\\\"text-link\\\" href=\\\"\";\n  if (helper = helpers.url) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.url); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"><span class=\\\"icon-play\\\"></span>\";\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n            </div>\\n        </a>\\n    </li>\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<div class=\\\"clearfix\\\">\";\n  if (helper = helpers.content) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.content); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\";\n  return buffer;\n  }\n\n  buffer += \"<ul class=\\\"entry-point-box plain\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.entries), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</ul>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoProctoring/controller/TaoProctoring/index',[\n    'jquery',\n    'helpers',\n    'layout/loading-bar',\n    'tpl!taoProctoring/tpl/entryPoint'\n], function ($, helpers, loadingBar, entryPointTpl) {\n    'use strict';\n\n    /**\n     * The polling delay used to refresh the list\n     * @type {Number}\n     */\n    var refreshPolling = 60 * 1000; // once per minute\n\n    /**\n     * The CSS scope\n     * @type {String}\n     */\n    var cssScope = '.deliveries-listing';\n\n    /**\n     * The CSS class used to hide an element\n     * @type {String}\n     */\n    var hiddenCls = 'hidden';\n\n    // the page is always loading data when starting\n    loadingBar.start();\n\n    /**\n     * Controls the taoProctoring index page\n     *\n     * @type {{start: Function}}\n     */\n    var taoProctoringCtlr = {\n        /**\n         * Entry point of the page\n         */\n        start : function start() {\n            var $titleLoading = $(cssScope + ' .loading');\n            var $titleEmpty = $(cssScope + ' .empty-list');\n            var $titleAvailable = $(cssScope + ' .available-list');\n            var $titleCount = $(cssScope + ' .count');\n            var $list = $(cssScope + ' .list');\n            var listEntries = $list.data('list');\n            var serviceUrl = helpers._url('deliveries', 'TaoProctoring', 'taoProctoring');\n            var pollTo = null;\n\n            // update the index from a JSON array\n            var update = function(entries) {\n                if (pollTo) {\n                    clearTimeout(pollTo);\n                    pollTo = null;\n                }\n\n                $titleLoading.addClass(hiddenCls);\n                $list.empty();\n\n                if (entries && entries.length) {\n                    $titleAvailable.removeClass(hiddenCls);\n                    $list.append(entryPointTpl({entries : entries}));\n                    $titleCount.text(entries.length);\n                    $titleEmpty.addClass(hiddenCls);\n                } else {\n                    $titleEmpty.removeClass(hiddenCls);\n                    $titleAvailable.addClass(hiddenCls);\n                }\n\n                loadingBar.stop();\n\n                // poll the server at regular interval to refresh the index\n                if (refreshPolling) {\n                    pollTo = setTimeout(refresh, refreshPolling);\n                }\n            };\n\n            // refresh the index\n            var refresh = function() {\n                loadingBar.start();\n\n                $titleLoading.removeClass(hiddenCls);\n\n                $.ajax({\n                    url: serviceUrl,\n                    data: { _cb : Date.now() },\n                    dataType : 'json',\n                    type: 'GET'\n                }).done(function(response) {\n                    listEntries = response && response.entries;\n                    update(listEntries);\n                });\n            };\n\n            if (listEntries) {\n                update(listEntries);\n            } else {\n                refresh();\n            }\n        }\n    };\n\n    return taoProctoringCtlr;\n});\n\n"]}